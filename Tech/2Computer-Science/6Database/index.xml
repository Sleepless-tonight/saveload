<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>6、Database on Save Load</title>
    <link>https://www.saveload.cn/Tech/2Computer-Science/6Database/</link>
    <description>Recent content in 6、Database on Save Load</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.saveload.cn/Tech/2Computer-Science/6Database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/2Computer-Science/6Database/MySQL-%E5%BA%94%E7%9F%A5%E5%BA%94%E4%BC%9A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/2Computer-Science/6Database/MySQL-%E5%BA%94%E7%9F%A5%E5%BA%94%E4%BC%9A/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/2Computer-Science/6Database/MySql-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/2Computer-Science/6Database/MySql-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>MySql 数据类型 一、MySQL的数据类型 主要包括以下五大类：
整数类型：BIT、BOOL、TINY INT、SMALL INT、MEDIUM INT、 INT、 BIG INT
浮点数类型：FLOAT、DOUBLE、DECIMAL
字符串类型：CHAR、VARCHAR、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB
日期类型：Date、DateTime、TimeStamp、Time、Year
其他数据类型：BINARY、VARBINARY、ENUM、SET、Geometry、Point、MultiPoint、LineString、MultiLineString、Polygon、GeometryCollection 等。
1、整数
类型 说明 存储需求（取值范围） tinyin 很小整数 1字节（[0~255]、[-128~127]）；255 = 2^8-1；127=2^7-1 smallint 小整数 2字节（[0~65535]、[-32768~32767]）；65535 = 2^16-1 mediumint 中等 3字节（[0~16777215]）；16777215 = 2^24-1 int(intege) 普通 4字节（[0~4294967295]）；4294967295 = 2^32-1 bigint 大整数 8字节（[0~18446744073709551615]）；18446744073709551615 = 2^64-1 注： 取值范围如果加了unsigned，则最大值翻倍，如tinyint unsigned的取值范围为(0~256)。
2、浮点数&amp;amp;定点数
类型 说明 存储需求（取值范围） float(m,d) 单精度浮点数 4字节(8位精度) m总个数，d小数位 double(m,d) 双精度浮点数 8字节(16位精度) m总个数，d小数位 decimal(m,d) 压缩的“严格”定点数 m&amp;lt;65 ，d&amp;lt;30 注： 定点数以字符串形式存储，对精度要求高时使用decimal较好；尽量避免对浮点数进行减法和比较运算。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/2Computer-Science/6Database/%E7%BF%BB%E8%AF%91-Mysql-%E7%9A%84-API-%E4%B9%8B%E9%AB%98%E4%BD%8E%E7%89%88%E6%9C%ACMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB%E5%8F%8A-springboot-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/2Computer-Science/6Database/%E7%BF%BB%E8%AF%91-Mysql-%E7%9A%84-API-%E4%B9%8B%E9%AB%98%E4%BD%8E%E7%89%88%E6%9C%ACMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB%E5%8F%8A-springboot-%E9%85%8D%E7%BD%AE/</guid>
      <description>高低版本MySQL数据库的 springboot 配置 1、概述 MySQL为使用MySQL Connector / J的Java编程语言开发的客户端应用程序提供连接。Connector /J实现了Java数据库连接（JDBC）API，以及它的许多增值扩展。它还支持新的X DevAPI。
MySQL Connector / J是JDBC Type 4驱动程序。可以使用与JDBC 3.0和 JDBC 4.2规范兼容的不同版本 （请参阅 第2章，Connector / J版本以及它们支持的MySQL和Java版本）。Type 4标识表示驱动程序是MySQL协议的纯Java实现，不依赖于MySQL客户端库。
对于使用通用设计模式的数据访问的大型程序，请考虑使用一种流行的持久性框架，如 Hibernate，Spring的JDBC模板或MyBatis SQL Maps，以减少用于调试，调整，保护和调试的JDBC代码量。保持。
2、版本差异 目前有两个MySQL Connector / J版本可用：
Connector / J 8.0（以前的Connector / J 6.0; 有关版本号更改的说明，请参阅 MySQL Connector / J 8.0.7中的更改）是Java 8平台的Type 4纯Java JDBC 4.2驱动程序。它提供了与MySQL 5.5,5.6,5.7和8.0的所有功能的兼容性。Connector / J 8.0提供了易于开发的功能，包括使用Driver Manager自动注册，标准化有效性检查，分类SQLExceptions，支持大量更新计数，支持包中的本地和偏移日期时间变体java.time ，支持JDBC-4 .x XML处理，支持每个连接客户端信息，并支持 NCHAR， NVARCHAR和 NCLOB数据类型。
Connector / J 5.1也是Type 4纯Java JDBC驱动程序，符合JDBC 3.0,4.0,4.1和4.2规范。它提供了与MySQL 5.5,5.6,5.7和8.0的所有功能的兼容性。</description>
    </item>
    
  </channel>
</rss>
