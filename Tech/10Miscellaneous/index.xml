<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>10、Miscellaneous on Save Load</title>
    <link>https://www.saveload.cn/Tech/10Miscellaneous/</link>
    <description>Recent content in 10、Miscellaneous on Save Load</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.saveload.cn/Tech/10Miscellaneous/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/Apache_toolkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/Apache_toolkit/</guid>
      <description>toolkit 工具包
commons-validator（通用验证系统） 验证体系对付用户界面的用户千变万化的输入可能。Apache ShardingSphere（分布式数据库中间件） 一套开源的分布式数据库中间件解决方案组成的生态圈，它由Sharding-JDBC、Sharding-Proxy和Sharding-Sidecar（规划中）这3款相互独立，却又能够混合部署配合使用的产品组成。它们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如Java同构、异构语言、云原生等各种多样化的应用场景。Apache Tika Apache Tika™工具箱可从一千多种不同的文件类型（例如PPT，XLS和PDF）中检测并提取元数据和文本。所有这些文件类型都可以通过一个界面进行解析，从而使Tika可用于搜索引擎索引，内容分析，翻译等等。Apache Nutch Nutch是基于Lucene实现的搜索引擎。包括全文搜索和Web爬虫Apache PDFBox® 在Apache PDFBox的®库是与PDF文档工作的一个开源的Java工具。该项目允许创建新的PDF文档，处理现有文档以及从文档中提取内容的能力。Apache PDFBox还包含几个命令行工具。Apache PDFBox在Apache许可证2.0版下发布。	ImageMagick® 使用ImageMagick的®创建，编辑，撰写，或转换位图图像。它可以读取和写入各种格式的图像（超过200种），包括PNG，JPEG，GIF，HEIC，TIFF，DPX，EXR，WebP，Postscript，PDF和SVG。使用ImageMagick调整，翻转，镜像，旋转，扭曲，剪切和变换图像，调整图像颜色，应用各种特殊效果，或绘制文本，线条，多边形，椭圆和贝塞尔曲线。Batik 是一个基于Java技术的SVG(可扩展矢量图)工具包。FOP FOP是由James Tauber发起的一个开源项目，原先的版本是利用xsl-fo将xml文件转换成pdf文件。但最新的版本它可以将xml文件转换成pdf，mif，pcl，txt等多种格式以及直接输出到打印机，并且支持使用SVG描述图形。XML Graphics XML Graphics：发展 XML 与图形进行转换的计划项目axis2c Axis2/c是一个用C语言实现的Web服务引擎，它服从可扩展的，灵活的Axis架构。Axis2/C可以用来提供web服务，也可以作为web服务的客户端。它可以很方便的嵌入到其他软件中，从而使该软件具有web功能。WSS4J WSS4J 是 Web服务安全规范 (OASIS Web Service Security , WS-Security) 的 Java 实现。WSS4J 是一个 Java 的类库用来对 SOAP 消息进行签名和校验，使用 Apache Axis 和 Apache XML-Security 项目。	Apache Forrest Apache Forrest是一个把来自各种不同的输入数据源转换成用一种或多种输出格式(比如HTML,PDF等)来统一显示的发布系统。它基于Apache Cocoon并分离了内容与内容结构,不仅可以生成静态的文档也可以当作一个动态的服务器。Xalan xalan是一套xslt处理器（有C和JAVA语言两种版本），用来将XML文件转换为HTML,TEXT和XML等其他类型文件格式。	Anakia Anakia 是一个XML的转化工具，它使用 JDOM 和 Velocity 来将XML文档转换成你所需要的文档格式。支持在 Ant 中设置转换任务以及使用 XSL 进行XML文件处理。	Roller 是一个全功能的多用户博客平台。采用Java语言开发	Commons-Net Commons项目中封装了各种网络协议的客户端	Sanselan 是一个纯 Java 的图形库，可以读写各种格式的图像文件，包括快速解析图片信息例如大小/颜色/icc以及元数据等jsoup: Java的HTML解析器jsoup是一个用于处理真实世界HTML的Java库。它提供了一个非常方便的API来提取和操作数据，使用最好的DOM，CSS和类似jquery的方法。Quartz: Java的任务调度框架Quartz 具有诸如 JTA 事务和集群等功能，可用于企业级应用程序的支持。Ok HTTP： HTTP 通讯框架Joda Time： 作为 Java 中日期和时间类的一个很好的替代品。XStream 将对象序列化到 XML 中Apache OpenNLP Apache OpenNLP软件支持最常见的NLP任务，例如标记化，句子分段，词性标记，命名实体提取，分块，解析和共指解析。这些任务通常是构建更高级的文本处理服务所必需的。OpenNLP还包括最大熵和基于感知器的机器学习。Apache Camel 骆驼是 开源集成框架 使您能够快速轻松地集成使用或生成数据的各种系统。装满 数百个组件用于访问数据库，消息队列，API或基本上在阳光下的任何东西。帮助您与一切集成。Apache Flink 流处理框架Axure RP Axure RP是一款专业的快速原型设计工具。Apache Trafodion 分布式 SQL 引擎 Apache Trafodion 宣布退役Pulsar Pulsar是一个分布式的消息发布/订阅传递平台，具有非常灵活地消息模型和一个直观的客户端APIMFC 微软基础类库（英语：Microsoft Foundation Classes，简称MFC）是微软公司提供的一个类库（class libraries），以C++类的形式封装了Windows API，并且包含一个应用程序框架，以减少应用程序开发人员的工作量。其中包含大量Windows句柄封装类和很多Windows的内建控件和组件的封装类。PWA PWA（Progressive Web App）是一种理念，使用多种技术来增强web app的功能Veloren Veloren 是一款受《立方体世界》、《荒野之息》、《我的世界》等游戏启发制作的独立RPG,完全开源免费。游戏致力于打造一个明亮、绚丽、有趣的世界,可以用独特有趣的方式探索FinalShell 是一款免费的国产的集 SSH 工具、服务器管理、远程桌面加速的良心软件，同时支持 Windows、macOS、Linux，它不单单是一个 SSH 工具，完整的说法应该叫一体化的服务器/网络管理软件。Apache APISIX Apache APISIX 是一个基于云原生、高速可扩展的开源微服务网关节点实现，其自身主要优势是高性能和强大的扩展性Meson Meson 旨在开发最具可用性和快速的构建系统。提供简单但强大的声明式语言用来描述构建。原生支持最新的工具和框架，如 Qt5 、代码覆盖率、单元测试和预编译头文件等。利用一组优化技术来快速变异代码，包括增量编译和完全编译。Jaspersoft® Studio Jaspersoft® Studio 是世界上最受欢迎的开源报告引擎。它完全以 Java 编写，能够使用来自任何类型的数据源的数据，并生成可以各种文档格式查看、打印或导出的像素完美文档，包括 HTML、PDF、Excel、OpenOffice、MS Word 和其他文档格式。vert.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/data_authority_managementa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/data_authority_managementa/</guid>
      <description>data_authority_managementa
独立的数据权限控制访问限制、某些数据不允许访问数据清洗、某些数据部分返回业务场景和数据安全级别划分（绝密、高保密、保密、可公开，四个级别）， 主要从“高保密”等级的敏感数据，开始进行梳理。这里我们把敏感数据分成四个维度进行梳理，用户、商家、终端、公司。（用户、业务、公司。）（基础数据标签、业务数据标签）应用动态数据屏蔽有五种可能的技术：1、在数据库中：数据库接收SQL并将重写应用于返回的屏蔽结果集。适用于开发人员和DBA，但不适用于应用程序（因为连接池，应用程序缓存和数据总线会隐藏数据库中的应用程序用户身份，并且还会导致应用程序数据损坏）。2、应用程序和数据库之间的网络代理：捕获SQL并在select请求上应用重写。适用于具有简单&#39;select&#39;requests但不适用于存储过程（代理仅识别exec。）和应用程序的开发人员和DBA（因为连接池，应用程序缓存和数据总线隐藏了数据库中的应用程序用户身份，也可以导致应用程序数据损坏）。3、最终用户和应用程序之间的网络代理：识别文本字符串并替换它们。此方法不适用于复杂的应用程序，因为当无意中应用实时字符串替换时，它很容易导致损坏。4、应用程序和XACML中的代码更改：代码更改难以执行，无法维护且不适用于打包的应用程序。5、在应用程序运行时：通过检测应用程序运行时，定义策略以重写从数据源返回的结果集，同时具有对应用程序用户的完全可见性。此方法是动态屏蔽复杂应用程序的唯一适用方法，因为它可以控制数据请求，数据结果和用户结果。=================================================wota5037的博客================================ 基于资源的权限系统-设计思路 基于资源的权限系统-数据库设计
通用权限管理设计 之 数据权限 基于资源的权限系统-设计思路 概述 权限系统提的最多的就是 RBAC（基于角色的访问控制）。 所谓角色，其实就是权限的集合，某个角色就是某几个权限的结合。其目的是为了简化授权和鉴权的过程。
基于角色的权限控制用在简单的权限环境下没有问题，如果在权限控制比较复杂的系统中，或者说要做通用的权限系统时，基于角色的权限控制会带来以下问题：1、角色可以用来做功能权限，做数据权限的话，会导致角色数量非常多 比如：bug管理系统，一般有 developer, reporter, manager 等一些角色，其中，reporter 可以创建bug，developer 可以解决，回复bug，manager 可以统计bug 等等。 在这个系统中，通过设置 developer，reporter，manager 几个角色，可以使得授权，鉴权更加简单，直观。 但是，如果权限粒度要求更细的话，比如，某些reporter只能创建普通级别的bug，某些reporter可以创建各个级别的bug，或者有更加细粒度的权限要求的话，角色的数量就会激增。 到时候，管理角色本身带来的工作量反而会大于角色带来的好处。2、角色是一维的，不同的角色之间一般都是独立的，而人员之间一般有树状的组织关系。所以，角色就很难与已有的组织关系互相映射。 而授权的时候，经常是上级的组织会自动获取下级创建的数据的一些权限3、对于不确定的系统来说，角色不好定义。如果是bug系统，比较成熟，方便定义角色类型，如果是通用系统的话，用户其实不太容易定义好自己需要的角色。另一种 RBAC（resource base access control）基于资源的权限系统。术语介绍人员 : 实际使用系统的用户，也就是需要进行权限检查的人组织 : 树形结构，但是人员可以属于一个或者多个组织资源 : 需要授权的东西都可以认为是资源，每个功能是资源，每个接口也是资源，每条数据也是资源。 资源树 上的根就是整个系统。动作 : 对资源的操作，比如常用的 创建，删除，更新，查询权限 : 组织 + 资源 + 动作 （什么人对什么资源可以做什么动作）系统初始化权限系统本身提供一个超级用户(admin)，通过此用户来初始化最初需要的信息。初始信息只需要定义：组织的根节点：以后追加的所有人员和组织都在此节点之下（比如就是某个公司）资源的根节点：以后追加的所有资源都在此节点之下（比如就是需要进行权限控制的系统）动作：对资源可能进行的操作（一般就是CURD，增删改查）有了以上信息，就完成了针对某个系统和组织的权限系统的基本初始化。 基本信息初始化之后，可以导入组织/人员，以及资源信息，或者直接在权限系统提供的页面上操作。注意 每个资源只有一个父节点，每个组织也只有一个父组织，但是每个人员可以属于多个组织授权过程授权是权限系统中重要的步骤之一，另一个重要步骤就是鉴权。 授权有2种视图：人员/组织 视图 下的授权流程选择 资源选择 动作确认授权生成权限数据注1 前2步的选择都可以多选。资源 视图 下的授权流程选择 人员/组织选择 动作确认授权生成权限数据鉴权过程鉴权是使用最频繁的步骤，几乎每次请求都会有鉴权的操作。 鉴权就是判断 某人对某资源做某个动作 是否合法，所以鉴权的 input 是 人员/组织，资源，动作； output 则是是否鉴权成功。根据 input 的内容（人员/组织，资源，动作），查看权限表中是否有匹配的数据1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/Markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/Markdown/</guid>
      <description>这是标题、 这是二级标题、 这是三级标题 这是三级标题 这是三级标题 这是三级标题 引用
嵌套引用
三嵌套引用
四嵌套引用
这是加粗的文字 这是倾斜的文字` 这是斜体加粗的文字 这是加删除线的文字 这是换行
- - 2. 1. GitHub
自动生成连接 http://www.github.com/
//代码块 E = mc^2 表格：
header1 header2 row1col1 row1col2 row2col1 row2col2 在这里插入 HTML 内容
目前支持的 HTML 元素有： 等 ，如：
使用 Ctrl+Alt+Del 重启电脑
制作待办事项 To-do Lis
待办事项 待办事项 待办事项 待办事项 绘制：流程图、序列图、甘特图、表格
逻辑示意图类型 流程图 graph TD;A--&amp;gt;B;A--&amp;gt;C;B--&amp;gt;D;C--&amp;gt;D; 序列图 sequenceDiagramparticipant Aliceparticipant BobAlice-&amp;gt;&amp;gt;John: Hello John, how are you?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/Markdown_PlantUML/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/Markdown_PlantUML/</guid>
      <description>Markdown_PlantUML
绘制：流程图、序列图、甘特图、表格 逻辑示意图类型 流程图 graph TD;A--&amp;gt;B;A--&amp;gt;C;B--&amp;gt;D;C--&amp;gt;D; 序列图 sequenceDiagramparticipant Aliceparticipant BobAlice-&amp;gt;&amp;gt;John: Hello John, how are you?loop HealthcheckJohn-&amp;gt;&amp;gt;John: Fight against hypochondriaendNote right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail!John--&amp;gt;&amp;gt;Alice: Great!John-&amp;gt;&amp;gt;Bob: How about you?Bob--&amp;gt;&amp;gt;John: Jolly good! 甘特图 ganttdateFormat YYYY-MM-DDtitle Adding GANTT diagram to mermaidexcludes weekdays 2014-01-10section A sectionCompleted task :done, des1, 2014-01-06,2014-01-08Active task :active, des2, 2014-01-09, 3dFuture task : des3, after des2, 5dFuture task2 : des4, after des3, 5d 类图 classDiagramClass01 &amp;lt;|-- AveryLongClass : CoolClass03 *-- Class04Class05 o-- Class06Class07 .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/mdBook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/mdBook/</guid>
      <description>初始化图书
.\mdbook.exe init D:\Projects\GitHubProjects\Sleepless-tonight.github.io\my-first-book
..\mdbook.exe serve &amp;ndash;open
.\mdbook.exe init D:\Projects\GitHubProjects\Sleepless-tonight.github.io\templates
.\mdbook.exe build path/to/book .\mdbook.exe build -d D:\Projects\GitHubProjects\Sleepless-tonight.github.io\templates</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/</guid>
      <description> 个人知识管理（Personal Knowledge Management） 个人知识管理（Personal Knowledge Management）的概念一般指个人通过工具建立知识体系并不断完善，进行知识的收集、消化吸收和创新的过程。
一、学习知识 （知识来源） 知识和信息不能混为一谈，信息是免费的，但毫无目标的获取信息，就无法将信息转化为知识。因此学习必须要有目标，如果你用有限的时间去学无限的知识，你将被知识“淹没”，我们要学习那些给自己带来最大提升的知识。
时间是一个最稀缺的资源，在学习知识的过程中，必须考虑知识获取的“成本”问题，这个成本除了金钱之外，最重要的是时间成本。因此，学习知识的工具需要满足：“花费时间较短，获得价值较高的知识”。
二、保存知识（知识保存） 保存知识的目的是为了在使用的时候能够最快速和准确地查询到相关内容。
三、共享知识（寻找道友） 知识共享和传播，是为了让别人知道你知道的知识，并得到信息的反馈，为什么要分享，不在于你认识什么人，而在于什么人认识你，不在于什么人影响了你，而在于你影响了什么人。因此要添加一些高质量的好友，订阅其分享内容，多争取对方的关注。
四、使用知识（分类归纳终结查询知识） 知识的收集和积累之后，最重要的还是如何利用这些知识资料。
个人信息管理器（通常称为PIM 工具，或者更简单地说，是 PIM）是一种作为个人组织者的应用程序软件。缩写PIM现在更常用于个人信息管理作为研究领域。 作为信息管理工具，PIM 工具的目的是便于记录、跟踪和管理某些类型的&amp;#34;个人信息&amp;#34;。个人信息可以包括以下任何信息：通讯录警报日历日期，例如：纪念日约会生日事件会议教育记录电子邮件地址传真通讯行程即时消息存档法律文件列表（如阅读列表、任务列表）)医疗信息，如医疗保健提供者联系信息、病史、处方密码和登录凭据个人文件收藏（数字和物理）：文档、音乐、照片、视频和类似个人日记/日记/备忘录/笔记项目管理功能食谱参考材料（包括科学参考，感兴趣的网站）RSS/原子源提醒语音信箱通信 日历日历软件信息管理密码管理器个人信息管理个人知识库个人维基 个人知识管理（PKM）是收集信息的过程，一个人用于收集、分类、存储、搜索、检索和分享日常活动中的知识（2007 年格兰德斯彭基斯）以及这些流程支持工作活动的方式（Wright 2005）。这是对知识工作者需要对自己成长和学习负责的想法的回应（Smedley 2009）。这是一种自下而上的知识管理方法（KM）（波拉德2008年）。 时间和任务管理个人层面的时间管理和任务管理都大量使用信息工具和外部信息形式，如要执行列表、日历、时间线和电子邮件交换。这些是另一种要管理的信息形式。多年来，电子邮件，特别是，已以临时的方式用于支持任务管理 内容管理（CM）是一组支持以任何形式或媒介收集、管理和发布信息的流程和技术。当通过计算机存储和访问时，这些信息可能更具体地称为数字内容，或简单地称为内容。数字内容可以采取文本（如电子文档）、图像、多媒体文件（如音频或视频文件）或任何其他文件类型的形式，这些文件类型遵循需要管理的内容生命周期。这个过程非常复杂，足以管理一些大小商业软件供应商，如Interwoven和微软提供内容管理软件，以控制和自动化内容生命周期的重要方面。 知识分类标签： </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E5%AD%A6%E4%B9%A0And%E8%B5%84%E6%96%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E5%AD%A6%E4%B9%A0And%E8%B5%84%E6%96%99/</guid>
      <description>时间：2019年3月4日10:29:43
学习：
英语、 数学之美、 Spring Cloud、 去B站看完：计算机科学速成课、 系统的计算机科学（所有九个主题，大致按照呈现的顺序，但理想情况下两者。瞄准每个主题100-200小时的学习，在整个职业生涯中重新访问收藏夹。）：https://teachyourselfcs.com/#math、 南京大学 计算机科学与技术系 计算机系统基础 ：https://nju-ics.gitbooks.io/ics2018-programming-assignment/content/、 清华大学计算机系课程攻略：https://github.com/Trinkle23897/THU-CST-Cracker 中国科学技术大学计算机学院课程资源：https://github.com/mbinary/USTC-CS-Courses-Resource 所有算法都用Java实现：https://github.com/TheAlgorithms/Java、 用Java实现的设计模式：https://github.com/iluwatar/java-design-patterns 低级别的编程语言：https://github.com/gurugio/lowlevelprogramming-university 资料：
带视频讲座的计算机科学课程清单：https://github.com/Developer-Y/cs-video-courses 精选的Java框架，库和软件的精选列表：https://github.com/akullpp/awesome-java 技术面试必备基础知识 ：https://github.com/CyC2018/CS-Notes 计算机学科基础知识和主流编程语言相关内容的总结：https://github.com/xuelangZF/CS_Offer 免费的编程中文书籍索引：https://github.com/justjavac/free-programming-books-zh_CN x86架构操作系统内核的实现 http://wiki.0xffffff.org/posts/hurlex-1.html
虚拟内存探究，深入理解进程地址空间 http://blog.coderhuo.tech/2017/10/19/Virtual_Memory_summary/
南京大学 计算机科学与技术系 计算机系统基础 课程实验 2019 https://nju-projectn.github.io/ics-pa-gitbook/ics2019/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E6%89%B9%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E6%89%B9%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</guid>
      <description>批处理操作指南
批处理原则
在构建批处理解决方案时，应考虑以下关键原则和注意事项。 批处理体系结构通常会影响体系结构 尽可能简化并避免在单批应用程序中构建复杂的逻辑结构 保持数据的处理和存储在物理上靠得很近（换句话说，将数据保存在处理过程中）。 最大限度地减少系统资源的使用，尤其是I / O. 在internal memory中执行尽可能多的操作。 查看应用程序I / O（分析SQL语句）以确保避免不必要的物理I / O. 特别是，需要寻找以下四个常见缺陷： 当数据可以被读取一次并缓存或保存在工作存储中时，读取每个事务的数据。 重新读取先前在同一事务中读取数据的事务的数据。 导致不必要的表或索引扫描。 未在SQL语句的WHERE子句中指定键值。 在批处理运行中不要做两次一样的事情。例如，如果需要数据汇总以用于报告目的，则应该（如果可能）在最初处理数据时递增存储的总计，因此您的报告应用程序不必重新处理相同的数据。 在批处理应用程序开始时分配足够的内存，以避免在此过程中进行耗时的重新分配。 总是假设数据完整性最差。插入适当的检查和记录验证以维护数据完整性。 尽可能实施校验和以进行内部验证。例如，对于一个文件里的数据应该有一个数据条数纪录，告诉文件中的记录总数以及关键字段的汇总。 在具有真实数据量的类似生产环境中尽早计划和执行压力测试。 在大批量系统中，数据备份可能具有挑战性，特别是如果系统以24-7在线的情况运行。数据库备份通常在在线设计中得到很好的处理，但文件备份应该被视为同样重要。如果系统依赖于文件，则文件备份过程不仅应该到位并记录在案，还应定期进行测试。 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E6%8B%89%E5%8D%95%E6%A8%A1%E5%9D%97%E4%B8%9A%E5%8A%A1%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E6%8B%89%E5%8D%95%E6%A8%A1%E5%9D%97%E4%B8%9A%E5%8A%A1%E8%AF%B4%E6%98%8E/</guid>
      <description>简介 我其实一直想给大家做些分享，但是觉得自己技术太菜了，一直不好意思，最近觉得还是做一个经验分享，不算技术分享。
今天分享的整体氛围是轻松，不要严肃，我从18年来公司，就一直是在搞API拉单，也有一些经验之谈，这个项目我大大小小零星算是不完善的重构三四次，主要目的是在业务的扩展中保持代码的可维护性和可扩展性，拒绝堆屎山了，拒绝“能跑就行”，但是维护成本越来越高。我了解项目的主要几个阶段： 1.0 是了解 API拉单 是个什么东西，没问题的跑起来。 1.2 是将项目改成了 redis 为核心，丢掉分布式任务管理、分布式节点管理 跑起来。 1.3 是将项目成为大益源子的一个服务，升级技术栈（比如原先是Java 1.7 和各种古老的 jar），以MQ为核心。 1.4 对API部分抽象 结果是新对接API变的简单，已对接平台升级和新对接API变的简单 1.5 对业务进行抽象 将类似的业务聚合，抽象，干掉冗余代码，
前3次是为了项目能用，后2次是为了项目能好用为什么要做后两次，1、个人追求；2、作为一个工程师，要满足工程师的要求，（工程师：权衡需求和资源，给出专业可行方案）之前的，有太多不专业的地方。
分享的目标：
1、讲解 API拉单模块的基本概念、基础信息、基本流程的逻辑关系和实现2、讲解 API拉单模块的功能、实现、演化和问题（这个 拉单模块 是怎么一步一步成为现在这样的。）功能：正向订单拉单、售前退款单拉单、售后退货退款单拉单、售后仅退款单拉单、售后换货单拉单、发货、已发货订单修改物流、AG-取消发货、AG-退货入仓、正向订单修改地址、解密、锁单、SKU查询、其它订单查询（修改地址的订单列表、服务单列表）、部分其它模块对平台的 API 对接承接。基本概念： API 拉单模块: 假如大益源子是个城市，API 拉单模块，就是这个城市修建的高速路，是石油管道，是比较基础的需求，通过对电商平台开放API的对接，沟通电商平台和大益源子，实现各种功能，比如从平台拉取订单信息，向平台同步订单的发货物流信息。
平台、各大电商平台和自建商城店铺、开在各大电商平台和自建商城上的店铺基本业务功能说明、	3.1、拉单从平台拉取订单信息3.2、发货向平台同步订单的发货物流信息3.3、售后单从平台拉取售后单信息包含：售前退款单拉单、售后退货退款单拉单、售后退款单拉单、售后换货单拉单3.4、AG（取消发货、退货入仓）自助售后服务3.5、正向订单自助修改地址、未发货的订单买家自助修改地址3.6、订单改配已发货订单向平台修改发货的物流信息3.7、RDS、API 反向代理入云必须3.8、加解密订单的敏感信息加密、解密、加密字段搜索3.9、验签基本过程防止中途篡改3.10、异常、重试、监控、报警因为整个 API 拉单模块几乎都是自动化的定时任务，而且很多都是异步任务，需要监控 定时任务：通过定时任务，自动的从平台的订单列表中拉取订单为了分布式的高效的拉取订单，将任务分成了4个阶段，由不同的节点去消费执行：1、Create根据 店铺配置，创建一个：从某个时间查询区间的 不同业务的 任务2、Count根据 Create 创建的 某个店铺的 某个业务的 某个时间区间的 任务，去平台查询此时间区间的订单数量，并根据订单数量去分页去创建 Down 任务3、Down获得订单列表4、Info根据订单列表获得每个订单详情，并处理加工订单基本概念：串联起来就是：API拉单基本的功能就是：通过定时任务，去各大平台，查询某个时间区间的某个订单列表。（相同业务不同平台分别实现）。一、首先列出需求，需求约束这个项目要怎么写： 1、抓单业务： 1、基于店铺定时抓不同类型单（正向、售前、售后） 2、不同店铺不同抓单频率 3、异常任务归档、重试 4、区间补单 4.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</guid>
      <description> 文件管理： 文件管理：图片、音频、视频、pdf、网页、文本1、目录标签化、2、文件类型标签化、3、文件属性标签化、4、查重5、给出保留建议6、文本文件关键字索引、全文搜索7、文本文件版本管理8、备份管理9、加密10、文件打开历史、文件夹打开历史、文件变动历史（例如 什么时间创建一个文件）11、文件编辑历史12、Archive、休闲娱乐、教程、电影、音乐、小说、13、标签云14、Data（数据）、Information（信息）、Knowledge（知识）15、序列、关键词、描述16、中国图书馆分类法、标签分类法、杜威十进制图书分类法17、我们把文件分成「工作、学习、生活、兴趣」四个大类、文档、图片、音乐、视频18、文件夹层级控制在了三层以内19、收藏夹和历史记录20、支持模糊搜索、过滤搜索结果21、Spotlight 全文检索功能，它能够自动索引 TXT、Word、Excel、PPT、PDF、EPUB 等文档里的内容22、知识图谱（Knowledge Graph）23、信息检索和推荐、相关性24、中文通用百科知识图谱（CN-DBpedia）25、ImageNet- 图片：1、每个目录随机抽取十几或几十张图缩小合并，形成一张比较直观的印象图。2、色调，tag，宽度什么的3、Image Comparer </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E7%89%88%E6%9C%AC%E8%A7%A3%E9%87%8A2.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E7%89%88%E6%9C%AC%E8%A7%A3%E9%87%8A2.0/</guid>
      <description>alpha版：内部测试版。α是希腊字母的第一个，表示最早的版本，一般用户不要下载这个版本，这个版本包含很多BUG，功能也不全，主要是给开发人员和 测试人员测试和找BUG用的。
beta版：公开测试版。β是希腊字母的第二个，顾名思义，这个版本比alpha版发布得晚一些，主要是给“部落”用户和忠实用户测试用的，该版本任然存 在很多BUG，但是相对alpha版要稳定一些。这个阶段版本的软件还会不断增加新功能。如果你是发烧友，可以下载这个版本。
rc版：全写：Release Candidate（候选版本），该版本又较beta版更进一步了，该版本功能不再增加，和最终发布版功能一样。这个版本有点像最终发行版之前的一个类似 预览版，这个的发布就标明离最终发行版不远了。作为普通用户，如果你很急着用这个软件的话，也可以下载这个版本。
stable版：稳定版。在开源软件中，都有stable版，这个就是开源软件的最终发行版，用户可以放心大胆的用了。
商业软件 RTM版：全称为Release to Manufacture。工厂版。改版程序已经固定，就差工厂包装、光盘印图案等工作了。
OEM版：厂商定制版。
EVAL版：评估版。就是有30或者60天等使用期限的版本。
RTL版：Retail.(零售版)，这个版本就是真正发售的版本，有漂亮的包装、光盘、说明书等东西和高昂的价格。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83IDaas%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83IDaas%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/</guid>
      <description>用户中心IDaas模块设计 一、IDaaS Identity as a Service ，简称 IDaaS ，是一个基于身份的服务，它是一个认证、认可、访问、管理、统计、维护、管理等服务的集合。
IDaaS ⾃适应⼆次认证、弱密码监测、账号⽣命周期管理、异常账号锁定等众多账号防护能⼒。
提供 IP ⿊⽩名单防护、异常登录锁定、弱密码检测、图⽚验证码、僵⼫账号管理等能⼒，全⾯提⾼身份认证安全⽔位。与此同时，IDaaS 还提供了可视化的图表界⾯，直观展示安全⻛险。
提⾼账户登录的安全性。IDaaS ⽀持 ⾃适应（设备、IP、静默（同一手机短时间多次）） 和 强制 两种⼆次认证类型。
二、用户中心升级原因 对于自有账号体系的应用，都需要对接账号风控，平台建议用户接入淘系账号风控体系，使用淘系账号的应用将默认享有平台提供的账号风控能力，如使用自有账号体系的应用，应具备平台认可的应用身份服务（简称：IDAAS）能力，并开启二次认证等安全策略并回传日志到平台。
三、两种升级方式主要工作 注意：无论是接入淘宝账户风控体系，还是自研对接御城河，都需要调整用户中心认证流程。
3.1、调整认证流程 在修改密码、绑定手机、绑定邮箱、绑定身份证等认证流程时，需要调整认证流程，必须要时需添加二次认证校验。
3.2、接入淘系账号风控体系 购买阿⾥云应⽤身份服务（IDaaS） 对接API，同步账户数据到淘系账号，由 IDaaS 进⾏统⼀认证。 idaas 数据将自动回流计算，无需isv/自研再对接御城河回流。 3.3、自研 对接API，应用需对接御城河 idaas 和二次认证接口回流数据。 四、调整认证所需工作 账户涉及二次认证新增属性（短信或MFA） 二次认证设置页 是否启用、启用模式、启用节点（登录、修改密码、手机、邮箱、身份证？）、启用（账户或组织）范围、认证类型（淘宝、自建） 二次认证方式（默认手机短信） 短信模板 验证码限制逻辑 验证码发送频率限制 同一验证码可以尝试 3 次输入，3 次均失败后，验证码失效。用户需要获取新验证码。 验证码有效期 二次认证弹窗页 当前认证手机号（中间遮掩） 获取验证码按钮（倒计时，防止重复点击） 验证码输入框 提交、取消按钮 后端各触发二次认证校验节点，二次认证校验统一接口 账户同步 选择所需同步账户范围 页 账户增删改等阶段对接阿里云 IDaaS API 上报日志 注意：
如果是自建需要完成除 5 阶段外全部流程，如果对接阿里云 IDaaS ，只需完成 3、4、5 阶段、并对接API，其它由阿里云 IDaaS 控制。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/10Miscellaneous/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E4%BA%8C%E6%AC%A1%E9%AA%8C%E8%AF%81%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/10Miscellaneous/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E4%BA%8C%E6%AC%A1%E9%AA%8C%E8%AF%81%E6%96%B9%E6%A1%88/</guid>
      <description>用户中心二次验证方案 平台 平台店铺 处理订单应用（大益源子） 处理订单的我方应用用户（客服） 用户中心（自有账号体系） IDaaS（一个基于用户中心提供二次验证的的服务） 御城河（平台的应用合规服务）
一、原因 近年来国家陆续出台了个人信息保护和数据安全相关的法律法规，对保障消费者个人信息权益、规范数据处理活动提出了更明确的责任要求。为了更好的保障用户信息的安全、提升开发者应用对于用户个人信息的保护及应用自身的安全防护能力，平台因此提出《开发者安全能力标准》。
淘宝平台要求获取消费者个人敏感信息的所有IT类应用对接御城河系统，应用标签包括但不限于：商家后台系统（简称“自研系统”）、国际商家后台系统（简称“自研系统”）、服务商后台系统、订单管理、ERP软件、进销存软件、全渠道ERP，仓储管理系统（WMS）、奇门-商家自研WMS系统等。
二、用户中心升级原因 对于自有账号体系的应用，都需要对接账号风控，平台建议用户接入淘系账号风控体系，使用淘系账号的应用将默认享有平台提供的账号风控能力，如使用自有账号体系的应用，应具备平台认可的应用身份服务（简称：IDAAS）能力，并开启二次认证等安全策略并回传日志到平台。
三、两种升级方式主要工作 注意：无论是接入淘宝账户风控体系，还是自研对接御城河，都需要调整用户中心认证流程。
3.1、调整认证流程 在修改密码、绑定手机、绑定邮箱、绑定身份证等认证流程时，需要调整认证流程，必须要时需添加二次认证校验。
3.2、接入淘系账号风控体系 购买阿⾥云应⽤身份服务（IDaaS） 对接API，同步账户数据到淘系账号，由 IDaaS 进⾏统⼀认证。 idaas 数据将自动回流计算，无需isv/自研再对接御城河回流。 3.3、自研 对接API，应用需对接御城河 idaas 和二次认证接口回流数据。 四、调整认证所需工作 账户涉及二次认证新增属性（短信或MFA） 二次认证设置页 是否启用、启用模式、启用节点（登录、修改密码、手机、邮箱、身份证？）、启用（账户或组织）范围、认证类型（淘宝、自建） 二次认证方式（默认手机短信） 短信模板 验证码限制逻辑 验证码发送频率限制 同一验证码可以尝试 3 次输入，3 次均失败后，验证码失效。用户需要获取新验证码。 验证码有效期 二次认证弹窗页 当前认证手机号（中间遮掩） 获取验证码按钮（倒计时，防止重复点击） 验证码输入框 提交、取消按钮 后端各触发二次认证校验节点，二次认证校验统一接口 账户同步 选择所需同步账户范围 页 账户增删改等阶段对接阿里云 IDaaS API 上报日志 注意：
如果是自建需要完成除 5 阶段外全部流程，如果对接阿里云 IDaaS ，只需完成 3、4、5 阶段、并对接API，其它由阿里云 IDaaS 控制。
五、接入淘系账号风控体系流程说明 对接 阿⾥云应⽤身份服务 IDaaS ，对于我们应用的客户来说，实际上是透明的，他们并不会感知到后端验证的变更。</description>
    </item>
    
  </channel>
</rss>
