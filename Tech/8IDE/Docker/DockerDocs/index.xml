<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DockerDocs on Save Load</title>
    <link>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/</link>
    <description>Recent content in DockerDocs on Save Load</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-1-Docker-%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-1-Docker-%E6%A6%82%E8%BF%B0/</guid>
      <description>Docker Docs 转自：Docker 官网
链接：https://docs.docker.com/get-started/overview/
Docker 概述 Docker 是一个用于开发、发布和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分离，以便您可以快速交付软件。使用 Docker，您可以像管理应用程序一样管理基础架构。通过利用 Docker 的快速发布、测试和部署代码的方法，您可以显著减少编写代码和在生产环境中运行代码之间的延迟。
Docker 平台 Docker 提供了在松散隔离的环境中打包和运行应用程序（称为容器）的功能。隔离和安全性允许您在给定主机上同时运行多个容器。容器是轻量级的，包含运行应用程序所需的所有内容，因此您无需依赖主机上当前安装的内容。您可以在工作时轻松共享容器，并确保与之共享的每个人都能获得以相同方式工作的相同容器。
Docker 提供了工具和平台来管理容器的生命周期：
使用容器开发应用程序及其支持组件。 容器将成为分发和测试应用程序的单元 准备就绪后，将应用程序作为容器或编排服务部署到生产环境中。无论您的生产环境是本地数据中心、云提供商还是两者的混合体，这都是一样的。 我可以使用 Docker 做什么？ 快速、一致地交付您的应用程序 Docker 允许开发人员使用提供应用程序和服务的本地容器在标准化环境中工作，从而简化了开发生命周期。容器非常适合持续集成和持续交付 （CI/CD） 工作流。
请考虑以下示例方案：
您的开发人员在本地编写代码，并使用 Docker 容器与同事共享他们的工作。 他们使用 Docker 将其应用程序推送到测试环境中，并执行自动和手动测试。 当开发人员发现 Bug 时，他们可以在开发环境中修复它们，并将其重新部署到测试环境中进行测试和验证。 测试完成后，将修复程序推送到生产环境非常简单。. 响应式部署和扩展 Docker 基于容器的平台允许高度可移植的工作负载。Docker 容器可以在开发人员的本地笔记本电脑、数据中心的物理机或虚拟机、云提供商或混合环境中运行。
Docker 的可移植性和轻量级特性还使得能够近乎实时地动态管理工作负载、根据业务需求扩展或拆除应用程序和服务变得容易。
在同一硬件上运行更多工作负载 Docker 是轻量级和快速的。它为基于虚拟机管理程序的虚拟机提供了一种可行且经济高效的替代方案，因此您可以使用更多的计算容量来实现业务目标。Docker 非常适合高密度环境以及需要用更少资源完成更多工作的中小型部署。
Docker 体系结构 Docker 使用 客户端-服务器 体系结构。Docker 客户端与 Docker 守护程序通信，后者负责构建、运行和分发 Docker 容器的繁重工作。Docker 客户端和守护程序可以在同一系统上运行，也可以将 Docker 客户端连接到远程 Docker 守护程序。Docker 客户端和守护程序使用 REST API、UNIX 套接字或网络接口进行通信。另一个 Docker 客户端是 Docker Compose，它允许您使用由一组容器组成的应用程序。 Docker 守护程序 Docker daemon Docker 守护程序（） 侦听 Docker API 请求并管理 Docker 对象，如映像、容器、网络和卷。守护程序还可以与其他守护程序通信以管理 Docker 服务。dockerd</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-2-%E8%8E%B7%E5%8F%96-Docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-2-%E8%8E%B7%E5%8F%96-Docker/</guid>
      <description> Docker Docs 转自：Docker 官网
链接：https://docs.docker.com/get-started/overview/
获取 Docker 单独有写一篇如何安装
docker run hello-world </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-3-%E7%AB%8B%E5%8D%B3%E5%BC%80%E5%A7%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs-3-%E7%AB%8B%E5%8D%B3%E5%BC%80%E5%A7%8B/</guid>
      <description>Docker Docs 转自：Docker 官网
链接：https://docs.docker.com/get-started/overview/
立即开始 第 1 部分：入门 方向和设置 欢迎！我们很高兴您想学习 Docker。
本页包含有关如何开始使用 Docker 的分步说明。在本教程中，您将学习如何：
将映像作为容器生成和运行 使用 Docker Hub 共享映像 使用多个容器和一个数据库部署 Docker 应用程序 使用 Docker Compose 运行应用程序 此外，您还将了解构建映像的最佳做法，包括有关如何扫描映像以查找安全漏洞的说明。
下载并安装 Docker 建议在 Linux 系统上安装 Docker。
开始教程 如果您已经运行了该命令以开始使用本教程，那么恭喜您！如果没有，请打开命令提示符或 bash 窗口，然后运行以下命令：
docker run -d -p 80:80 docker/getting-started 您会注意到正在使用一些标志。以下是有关它们的更多信息：
-d- 在分离模式下运行容器（在后台） -p 80:80- 将主机的端口 80 映射到容器中的端口 80 docker/getting-started- 要使用的图像 提示
您可以组合单个字符标志以缩短完整命令。例如，上面的命令可以写成：
docker run -dp 80:80 docker/getting-started Docker 仪表板 Docker Dashboard 在走得太远之前，我们想突出显示 Docker 仪表板，它让你可以快速查看计算机上运行的容器。Docker Dashboard 适用于 Mac 和 Windows。它使您可以快速访问容器日志，让您在容器内获得一个shell，并允许您轻松管理容器生命周期（停止，删除等）。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/8IDE/Docker/DockerDocs/DockerDocs/</guid>
      <description> Docker Docs 转自：Docker 官网
链接：https://docs.docker.com/get-started/overview/
Docker 概述 </description>
    </item>
    
  </channel>
</rss>
