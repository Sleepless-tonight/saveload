<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>5、WorkflowEngine on Save Load</title>
    <link>https://www.saveload.cn/Tech/6Technical-Topics/5WorkflowEngine/</link>
    <description>Recent content in 5、WorkflowEngine on Save Load</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.saveload.cn/Tech/6Technical-Topics/5WorkflowEngine/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/6Technical-Topics/5WorkflowEngine/BPMN2.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/6Technical-Topics/5WorkflowEngine/BPMN2.0/</guid>
      <description>BPMN 2.0 3.1. BPMN 2.0是什么呢？ 业务流程模型注解（Business Process Modeling Notation - BPMN）是 业务流程模型的⼀种标准图形注解。这个标准 是由对象管理组（Object Management Group - OMG）维护的。
基本上，BPMN规范定义了任务看起来怎样的，哪些结构可以 与其他进⾏连接，等等。这就意味着 意思不会被误解。
标准的早期版本（1.2版以及之前）仅仅限制在模型上， ⽬标是在所有的利益相关者之间形成通⽤的理解， 在⽂档，讨论和实现业务流程之上。 BPMN标准证明了它⾃⼰，现在市场上许多建模⼯具 都使⽤了BPMN标准中的元素和结构。实际上，现在的jPDL设计器也使⽤了 BPMN元素。
BPMN规范的2.0版本，当前已经处于最终阶段了， 已经计划不就就会完成，允许添加精确的技术细节 在BPMN的图形和元素中， 同时制定BPMN元素的执行语法。 通过使用XML语言来指定业务流程的可执行语法， BPMN规范已经演变为业务流程的语言， 可以执行在任何兼容BPMN2的流程引擎中， 同时依然可以使用强大的图形注解。
3.2. 历史和目标 jBPM BPMN2的实现是在jBPM 4.0发布之后 在2009年8月，在与社区进行了紧密协作之后启动的。 而后，我们决定了第一个发布版（比如，文档/QA） 涉及一部分BPMN2规范，将在jBPM 4.3发布。
我们的目标是建立一个原生BPMN2运行引擎 （或者说实现&amp;rsquo;可执行的BPMN2&amp;rsquo;）基于流程虚拟机 （Process Virtual Machine - PVM）。 注意，这个版本的主要目标是原生可执行， 不是图形注解 - 但是我们清楚 对于未来的版本是很重要的。
如果用户已经了解了jBPM，就会发现
配置结构保持不变 API与已经存在的完全一样或者很类似 测试BPMN2流程也可以使用常用的java测试框架 数据库表结构保持不变 所以，总体来说，我们的主要目标是保持所有在jBPM上好的事情， 加强它们，使用一个标准的流程语言。
3.3. JPDL vs BPMN 2.0 第一个问题可能是，很正当的，映入脑海的是， 为什么已经有了jPDL还要实现BPMN2。它们两个语言 的目标都是定义可执行的业务流程。从高层次来看， 两个语言是等效的。主要的区别是 BPMN2是“厂商中立”的，你可以使用标准， 而jPDL是绑定在jBPM上的（虽然会有一些争论 绑定在开源语言厂商比如jPDL 和绑定在闭源产品）。</description>
    </item>
    
  </channel>
</rss>
