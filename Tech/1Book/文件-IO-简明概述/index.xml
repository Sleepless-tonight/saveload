<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文件 IO 简明概述 on Save Load</title>
    <link>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/</link>
    <description>Recent content in 文件 IO 简明概述 on Save Load</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0--1Linux-%E7%9A%84-Page-Cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0--1Linux-%E7%9A%84-Page-Cache/</guid>
      <description>文件 I/O 简明概述 转自： Spongecaptain
链接：https://spongecaptain.cool/SimpleClearFileIO/
Linux 的 Page Cache 1. Page Cache 1.1 Page Cache 是什么？ 为了理解 Page Cache，我们不妨先看一下 Linux 的文件 I/O 系统，如下图所示： Figure1. Linux 文件 I/O 系统
VFS 虚拟文件系统(Virtual File System)
Device Driver 设备驱动程序
I/O Scheduler I/O 调度器
Block I/O Layer 块 I/O 层 上图中，红色部分为 Page Cache。可见 Page Cache 的本质是由 Linux 内核管理的内存区域。我们通过 mmap 以及 buffered I/O 将文件读取到内存空间实际上都是读取到 Page Cache 中。
1.2 如何查看系统的 Page Cache？ 通过读取 /proc/meminfo 文件，能够实时获取系统内存情况：</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0--2DMA-%E4%B8%8E%E9%9B%B6%E6%8B%B7%E8%B4%9D%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0--2DMA-%E4%B8%8E%E9%9B%B6%E6%8B%B7%E8%B4%9D%E6%8A%80%E6%9C%AF/</guid>
      <description> 文件 I/O 简明概述 转自： Spongecaptain
链接：https://spongecaptain.cool/SimpleClearFileIO/
# 文件 I/O 简明概述 1. Page Cache 1.1 Page Cache 是什么？ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.saveload.cn/Tech/1Book/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/%E6%96%87%E4%BB%B6-IO-%E7%AE%80%E6%98%8E%E6%A6%82%E8%BF%B0/</guid>
      <description> 文件 I/O 简明概述 转自： Spongecaptain
链接：https://spongecaptain.cool/SimpleClearFileIO/
文件 I/O 简明概述 文件 I/O 性能是后台应用的主要瓶颈之一，一直以来想对文件 I/O 这个偌大的系统进行总结，故写此文。
文件 I/O 内容较多，书籍的意义在于能更系统地说明问题，避免博客文章散乱的问题。
书籍有涉及很大部分非原创内容，相关引用会在 REFERENCE 小节中指出。
书籍内容包括：
1.page cache 2.DMA 与零拷贝技术 3.mmap 4.文件分区 5.Java ByteBuffer与 Channel 6.FileChannel 7.JavaVisual 工具 8.Java ByteBuffer 测试 9.如何实现顺序读写 一些章节可能会需要一定的 Java 语言基础，其中：1~4 小节完全不需要 Java 基础，而 5~9 小节会涉及一定的 Java 代码。读者朋友可以有选择性地阅读。
Figure1.Linux IO Stack Diagram
推荐阅读 On Disk IO, Part 1: Flavors of IO On Disk IO, Part 2: More Flavours of IO Read, write &amp;amp; space amplification - pick 2 </description>
    </item>
    
  </channel>
</rss>
